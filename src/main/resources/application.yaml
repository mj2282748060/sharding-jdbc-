server:
  port: 8080

mybatis:
  configuration:
    mapUnderscoreToCamelCase: true

pagehelper:
  helperDialect: mysql
  reasonable: false
  supportMethodsArguments: true
  params: count=countSql

spring:
  shardingsphere:
    datasource:
      names: ds0,ds1
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/simplezero_0?serverTimezone=Hongkong&autoReconnect=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true
        username: root
        password: zlzhou
        initial-size: 5
        min-idle: 5
        max-active: 200
        max-wait: 60000
        test-on-borrow: true
        test-while-idle: true
        time-between-eviction-runs-millis: 60000
        min-evictable-idle-time-millis: 300000
        remove-abandoned: true
        remove-abandoned-timeout: 3000
        validation-query: select 1
      ds1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3307/simplezero_1?serverTimezone=Hongkong&autoReconnect=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true
        username: root
        password: zlzhou
        initial-size: 5
        min-idle: 5
        max-active: 200
        max-wait: 60000
        test-on-borrow: true
        test-while-idle: true
        time-between-eviction-runs-millis: 60000
        min-evictable-idle-time-millis: 300000
        remove-abandoned: true
        remove-abandoned-timeout: 3000
        validation-query: select 1
    props:
      sql:
        show: true
    sharding:
      default-data-source-name: ds0
      default-database-strategy:
        none:
          any:
      default-table-strategy:
        none:
          any:
      tables:
        # 行表达式配置 按照 place_id 分库分表
        pick_task:
          actual-data-nodes: ds$->{0..1}.pick_task_$->{0..3}
          database-strategy:
            inline:
              sharding-column: place_id
              algorithm-expression: ds$->{place_id % 4}
          tableStrategy:
            inline:
              shardingColumn: place_id
              algorithmExpression: pick_task_$->{place_id.intdiv(2)  % 4}
        # 精确分片 按照 place_id 分库 sharding_key 分表
        retry_biz_record:
          actual-data-nodes: ds$->{0..1}.retry_biz_record
          database-strategy:
            inline:
              sharding-column: place_id
              algorithm-expression: ds$->{place_id % 4}
          table-strategy:
            standard:
              sharding-column: sharding_key
              precise-algorithm-class-name: com.simplezero.coding.sharding.repository.sharding.CustomerPreciseShardingAlgorithm
        # 精确分片 不分库 按照 month 分表
        operation_log:
          actual-data-nodes: ds0.operation_log
          table-strategy:
            standard:
              sharding-column: month
              precise-algorithm-class-name: com.simplezero.coding.sharding.repository.sharding.MonthlyPreciseShardingAlgorithm
        # 复合键分片 按照 place_id 分库 place_id + month 分表
        inv_inventory_log:
          actual-data-nodes: ds$->{0..1}.inv_inventory_log
          database-strategy:
            inline:
              sharding-column: place_id
              algorithm-expression: ds$->{place_id % 2}
          table-strategy:
            complex:
              sharding-columns: month,place_id
              algorithm-class-name: com.simplezero.coding.sharding.repository.sharding.CustomerComplexKeysShardingAlgorithm

  application:
    name: simple-sharding
